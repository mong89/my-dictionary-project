{"version":3,"sources":["Synonyms.js","Meaning.js","Results.js","Dictionary.js","App.js","reportWebVitals.js","index.js"],"names":["Synonyms","props","synonyms","className","map","synonym","index","Meaning","console","log","meaning","partOfSpeech","definitions","definition","example","Results","results","word","meanings","Dictionary","useState","keyword","setKeyword","setResults","handleResponse","response","data","onSubmit","event","preventDefault","apiUrl","axios","get","then","type","onChange","target","value","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kPAEe,SAASA,EAASC,GAC7B,OAAIA,EAAMC,SAEF,oBAAIC,UAAU,WAAd,SACKF,EAAMC,SAASE,KAAI,SAAUC,EAASC,GACnC,OAAO,6BAAiBD,GAARC,QAIzB,KCRI,SAASC,EAASN,GAEhC,OADGO,QAAQC,IAAIR,EAAMS,SAEjB,sBAAKP,UAAU,UAAf,UACI,6BAAKF,EAAMS,QAAQC,eAClBV,EAAMS,QAAQE,YAAYR,KAAI,SAAUS,EAAYP,GAEjD,OACI,8BACI,8BACI,iDACCO,EAAWA,WACZ,uBACA,8CACA,6BAAKA,EAAWC,UAChB,uBACA,cAACd,EAAD,CAAUE,SAAUW,EAAWX,eAR7BI,SCRZ,SAASS,EAAQd,GAE5B,OADAO,QAAQC,IAAIR,EAAMe,SACdf,EAAMe,QAEN,sBAAKb,UAAU,UAAf,UACA,6BAAKF,EAAMe,QAAQC,OAClBhB,EAAMe,QAAQE,SAASd,KAAI,SAAUM,EAASJ,GAC3C,OACI,8BACA,cAACC,EAAD,CAASG,QAASA,KADRJ,SAQf,KCbI,SAASa,IACpB,MAA4BC,mBAAU,IAAtC,mBAAKC,EAAL,KAAcC,EAAd,KACA,EAA4BF,mBAAU,MAAtC,mBAAKJ,EAAL,KAAcO,EAAd,KAEA,SAASC,EAAeC,GACpBjB,QAAQC,IAAIgB,EAASC,KAAK,IAC1BH,EAAWE,EAASC,KAAK,IAa7B,OACA,sBAAKvB,UAAU,aAAf,UACI,sBAAMwB,SAZV,SAAgBC,GACZA,EAAMC,iBAEN,IAAIC,EAAM,6DAAyDT,GACnEU,IAAMC,IAAIF,GAAQG,KAAKT,IAQvB,SACI,uBAAOU,KAAK,SAASC,SAN7B,SAA6BP,GACzBN,EAAWM,EAAMQ,OAAOC,YAOxB,cAACtB,EAAD,CAASC,QAASA,OC1BX,SAASsB,IACtB,OACE,qBAAKnC,UAAU,MAAf,SACE,sBAAKA,UAAU,YAAf,UACA,wBAAQA,UAAU,aAAlB,8BAGA,2DACA,+BACE,cAACgB,EAAD,MAEF,0DCfN,IAYeoB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBR,MAAK,YAAkD,IAA/CS,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,K","file":"static/js/main.6bef588e.chunk.js","sourcesContent":["import React from \"react\";\n\nexport default function Synonyms(props) {\n    if (props.synonyms) {\n        return (\n            <ul className=\"Synonyms\">\n                {props.synonyms.map(function (synonym, index) {\n                    return <li key={index}>{synonym}</li>;\n                })}\n            </ul>\n         );} else {\n    return null;\n}}","import React from \"react\";\nimport Synonyms from \"./Synonyms\";\n\nexport default function Meaning (props) {\n    console.log(props.meaning);\n return (\n     <div className=\"Meaning\">\n         <h3>{props.meaning.partOfSpeech}</h3>\n         {props.meaning.definitions.map(function (definition, index)\n         {\n             return (\n                 <div key={index}>\n                     <p>\n                         <strong>Definition:</strong>\n                         {definition.definition}\n                         <br />\n                         <strong>Example:</strong>\n                         <em>{definition.example}</em>\n                         <br/>\n                         <Synonyms synonyms={definition.synonyms} />\n                     </p>\n                     </div>\n             );\n         })}\n     </div>\n );\n}","import React from \"react\";\nimport Meaning from \"./Meaning\";\n\nexport default function Results(props) {\n    console.log(props.results);\n    if (props.results) {\n    return (\n        <div className=\"Results\">\n        <h2>{props.results.word}</h2>\n        {props.results.meanings.map(function (meaning, index) {\n            return(\n                <div key={index}>\n                <Meaning meaning={meaning} />\n             </div>\n            );\n         })}\n        </div>\n     );\n    } else {\n    return null;\n}\n}","import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport Results from \"./Results\";\nimport \"./App.css\";\n\n\nexport default function Dictionary (){\n    let [keyword, setKeyword] = useState (\"\");\n    let [results, setResults] = useState (null);\n\n    function handleResponse(response) {\n        console.log(response.data[0]);\n        setResults(response.data[0]);\n    }\n\n    function search(event) {\n        event.preventDefault();\n\n        let apiUrl = `https://api.dictionaryapi.dev/api/v2/entries/en_US/${keyword}`;\n        axios.get(apiUrl).then(handleResponse);\n    }\n\n    function handleKeywordChange(event) {\n        setKeyword(event.target.value);\n    }\n    return (\n    <div className=\"Dictionary\" >\n        <form onSubmit={search}>\n            <input type=\"search\" onChange={handleKeywordChange} />\n        </form>\n        <Results results={results} />\n    </div>\n\n    );\n    }","import React from \"react\";\nimport \"./App.css\";\nimport Dictionary from \"./Dictionary\";\n\nexport default function App() {\n  return (\n    <div className=\"App\">\n      <div className=\"container\">\n      <header className=\"App-header\">\n     MyDictionary App\n      </header>\n      <h1>What are you looking for?</h1>\n      <main>\n        <Dictionary />\n      </main>\n      <footer>\n        Coded by Monika\n      </footer>\n    </div>\n    </div>\n  );\n}\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}